@model IEnumerable<IsmIoTPortal.Models.IsmDevice>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.0.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>

    <!--SignalR script to update the page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var hub = $.connection.dashboardHub;

            // Register for the IsmDevicesIndex Group (a SignalR Group named with the constant name "IsmDevicesIndex")
            $.connection.hub.start().done(function () {
                hub.server.registerForIsmDevicesIndex();
                console.log("<<<< connection.hub.start().done >>>>")
            });

            //
            hub.client.refreshView = function () {

                // refresh the websitesite
                location.reload(true);
            };

        });
    </script>
}

@{int n = 5;} @*Max-Anzahl der angezeigten Commands in Command History*@ 

<p>
    @Html.ActionLink("Create New", "Create") |
    @Html.ActionLink("Power BI Preview Dashboard", "SignIn", "FilamentDataHistory", null, null)
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Hardware.Board)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Location.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Software.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DeviceId)
        </th>
        <th>
            Key
        </th>
        <th>
            Command History 
            <br/>(latest @n commands)
        </th>
        <th>
            Provisioning Status
        </th>
        <th>
            Command Messages
        </th>
        <th>
            Options 
        </th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Hardware.Board)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Location.City)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Software.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DeviceId)
        </td>
        <td>
            @*Mit Action Link als Text:*@
            @*@Html.ActionLink("show key", "ShowKey", new { deviceId = item.DeviceId })*@

            @*Mit Action Link an Button:*@
            @*http://www.codeproject.com/Tips/198477/Calling-a-MVC-Controller-and-Action-Method-using-H*@        
            <div class="form-actions no-color">
                <input type="button" value="show key" class="btn btn-default" onclick="location.href='@Url.Action("ShowKey", "IsmDevices", new { deviceId = item.DeviceId })'" />
            </div>

        </td>
        <td>
            @{ 
                // Get the latest n Commands
                List<IsmIoTPortal.Models.Command> latestCommands;
                if (item.Commands.Count >= n)
                {
                    latestCommands = item.Commands.GetRange(item.Commands.Count - n, n);
                }
                else
                {
                    latestCommands = item.Commands;
                }
            }
            @*@foreach (var cmd in item.Commands)*@
            @foreach (var cmd in latestCommands)
            {
                <ul>
                    @if (cmd.CommandStatus == CommandStatus.SUCCESS)
                    {
                        <li><text style="color:grey">@cmd.Timestamp.ToString()</text> - "@cmd.Cmd" - <text style="color:green">@cmd.CommandStatus</text> </li>
                    }
                    else if (cmd.CommandStatus == CommandStatus.PENDING)
                                        {
                        <li><text style="color:grey">@cmd.Timestamp.ToString()</text> - "@cmd.Cmd" - <text style="color:gray">@cmd.CommandStatus</text> </li>
                    }
                    else
                    {
                        <li><text style="color:grey">@cmd.Timestamp.ToString()</text> - "@cmd.Cmd" - <text style="color:red">@cmd.CommandStatus</text> </li>
                    }
                </ul>
            }
        </td>
        <td>
             @((ViewBag.DeviceList as Dictionary<string, Microsoft.Azure.Devices.Device>)[item.DeviceId].Status)
        </td>
        <td>
            @if ((ViewBag.DeviceList as Dictionary<string, Microsoft.Azure.Devices.Device>)[item.DeviceId].Status == Microsoft.Azure.Devices.DeviceStatus.Disabled)
            {
                @Html.ActionLink("Provision", "Provision", new { id = item.IsmDeviceId }) @(" |")
            }
            else
            {
                @Html.ActionLink("Unprovision", "Unprovision", new { id = item.IsmDeviceId }) @(" |")
            }
            @Html.ActionLink("Start", "Start", new { id = item.IsmDeviceId }) |
            @Html.ActionLink("Stop", "Stop", new { id = item.IsmDeviceId }) |
            @Html.ActionLink("Start Preview", "StartPreview", new { id = item.IsmDeviceId }) |
            @Html.ActionLink("Stop Preview", "StopPreview", new { id = item.IsmDeviceId })           
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.IsmDeviceId }) |
            @Html.ActionLink("Details", "Details", new { id=item.IsmDeviceId }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.IsmDeviceId }) |
            @Html.ActionLink("Current Processing Dashboard", "Dashboard", new { DeviceId = item.DeviceId }) |
            @* linkText, actionName, controllerName, routeValues (=Parameter), htmlAttributes *@
            @Html.ActionLink("Data History Dashboard", "Index", "FilamentDataHistory", new { DeviceId = item.DeviceId }, null)           
        </td>
    </tr>
}

</table>
