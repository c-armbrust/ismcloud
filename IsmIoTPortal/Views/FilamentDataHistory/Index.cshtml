@model IsmIoTPortal.Models.DateTimeInterval

@{
    ViewBag.Title = "FilamentDataHistory";
}

<h2>@Model.DeviceId - filamentous data over time</h2>

<hr />

@using (Html.BeginForm())
{
    <div>
        From: @Html.TextBoxFor(model => model.From, new { @id = "from" })
        To:   @Html.TextBoxFor(model => model.To, new { @id = "to" })
    </div>

    <div class="form-group">
        <div class="col-md-offset-5 col-md-10">
            <!--<input type="submit" value="Submit" class="btn btn-default" />-->
            <button class="btn btn-default">
                <span class="glyphicon glyphicon-ok"></span> Submit
            </button>
        </div>
    </div>
}

<hr />

<h3>Average filament count and length</h3>
<div style="width: 90%; height: 400px; margin-left: auto; margin-right: auto; margin-bottom: 20px;">
    <canvas id="fcchart" style="width: 100%; height: 100%;"></canvas>
</div>

<hr />
<hr />
<hr />
<hr />
<hr />

<h3>Histogram accumulated</h3>
<div style="width: 90%; height: 400px; margin-left: auto; margin-right: auto; margin-top: 40px;">
    <canvas id="histchart" style="width: 100%; height: 100%"></canvas>
</div>

<hr />
<hr />
<hr />
<hr />
<hr />

<h3>Table of average fc and fl</h3>
<div style="width: 90%; height: 400px; overflow-y: auto; margin-left: auto; margin-right: auto; margin-top:40px;">
    <table style="width: 100%;" class="table table-hover table-striped">
        <tr>
            <th>Time</th>
            <th>FC</th>
            <th>FL</th>
        </tr>
        @foreach (var item in Model.List)
        {
            <tr>
                <td>@(item.Time)</td>
                <td>@(item.FC)</td>
                <td>@(item.FL)</td>
            </tr>
        }
    </table>
</div>

@section scripts {
    @* datetime picker *@
    <link rel="stylesheet" type="text/css" href="~/Scripts/datetimepicker/jquery.datetimepicker.css" />
    <script src="~/Scripts/datetimepicker/jquery.datetimepicker.full.min.js"></script>
    <script src="~/Scripts/Chart.min.js"></script>
    <script>

        $(document).ready(function () {

            var lineWidth = 2;
            var lineTension = 0.1;
            var fill = false;
            var bg_color = 'rgba(255, 99, 132, 0)';
            var fc_color = "rgb(75,192,192)";
            var fl_color = "rgb(192,75,75)";
            var fc_grid = "rgba(75,192,192,0.3)";
            var fl_grid = "rgba(192,75,75,0.3)";


            var options = {
                scales: {
                    yAxes: [{
                        type: 'linear',
                        position: 'left',
                        scaleLabel: {
                            display: true,
                            labelString: "Filament Count",
                            fontColor: fc_color,
                        },
                        ticks: {
                            beginAtZero: true
                        },
                        gridLines: {
                            display: true,
                            color: fc_grid
                        },
                        id: "fc-axis"
                    },
                    {
                        type: 'linear',
                        position: 'right',
                        scaleLabel: {
                            display: true,
                            labelString: "Filament Length (µm)",
                            fontColor: fl_color,
                        },
                        ticks: {
                            beginAtZero: true
                        },
                        gridLines: {
                            display: true,
                            color: fl_grid
                        },
                        id: "fl-axis"
                    }]
                }
            }
            // Data chart
            var alldata = {
                labels: [@Html.Raw(string.Join(",", Model.List.Select(f => { return $"'{f.Time}'"; })))],
                datasets: [{
                    label: 'Filament Count',
                    lineTension: lineTension,
                    backgroundColor: bg_color,
                    borderColor: fc_color,
                    borderWidth: lineWidth,
                    fill: fill,
                    yAxisID: 'fc-axis',
                    data: [@string.Join(",", Model.List.Select(f => f.FC))]
                },
                {
                    label: 'Filament Length',
                    lineTension: lineTension,
                    backgroundColor: bg_color,
                    borderColor: fl_color,
                    borderWidth: lineWidth,
                    fill: fill,
                    yAxisID: 'fl-axis',
                    data: [@string.Join(",", Model.List.Select(f => f.FL))]
                }]
            }

            var hist_bg_color = 'rgba(75, 192, 192, 0.2)';
            var hist_color = "rgba(75,192,192, 1)";
            // Histogram Chart
            var histdata = {
                labels: [ @Html.Raw(string.Join(",", @Enumerable.Range(1, 10).Select(n => { return $"'{n * 10}'"; })))],
                datasets: [{
                        label: 'Filament Number',
                        backgroundColor: hist_bg_color,
                        borderColor: hist_color,
                        borderWidth: lineWidth,
                        data: [
                            @(
                                string.Join(",", new List<int?>
                                {
                                    Model.List.Sum(f => f.H1),
                                    Model.List.Sum(f => f.H2),
                                    Model.List.Sum(f => f.H3),
                                    Model.List.Sum(f => f.H4),
                                    Model.List.Sum(f => f.H5),
                                    Model.List.Sum(f => f.H6),
                                    Model.List.Sum(f => f.H7),
                                    Model.List.Sum(f => f.H8),
                                    Model.List.Sum(f => f.H9),
                                    Model.List.Sum(f => f.H10)
                                })
                            )
                        ]
                    }]
            }


            // FC and FL chart
            var ctx = $("#fcchart");
            var chart = new Chart(ctx, {
                type: 'line',
                data: alldata,
                options: options
            });

            // Histogram Chart
            ctx = $("#histchart");
            chart = new Chart(ctx, {
                type: 'bar',
                data: histdata
            });

            // Date Time Picker
            var t;
            var f;
            jQuery('#from').datetimepicker({
                onChangeDateTime: function (dp, $input) {
                    $("#from").val($input.val());
                }
            });

            jQuery('#to').datetimepicker({
                onChangeDateTime: function (dp, $input) {
                    $("#to").val($input.val());
                }
            });

        });

    </script>
}

