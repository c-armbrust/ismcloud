@model IsmIoTPortal.Models.Release

@{
    ViewBag.Title = "Create";
}

<h2>Create new Release</h2>

<h3>Version Builder</h3>
<div class="row form-inline">
    <div class="form-group col-md-2 col-md-offset-1">
        <label for="sw-prefix">Version</label>
        <input type="text" class="form-control" id="sw-prefix" placeholder="e.g. v-2.0.1">
    </div>
    <div class="form-group col-md-2">
        <label for="sw-release">Release Type</label>
        <select class="form-control" id="sw-release">
            <option>Major release</option>
            <option>Minor release</option>
            <option selected="selected">Patch</option>
        </select>
    </div>
    <div class="form-group col-md-2">
        <label for="sw-suffix">Suffix</label>
        <input type="text" class="form-control" id="sw-suffix" placeholder="e.g. alpha">
    </div>
</div>
<h3>Firmware Update</h3>
@using (Html.BeginForm("Create", "Software", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group @(ViewBag.NameError != null?"has-error":"")">
            <label class="control-label col-md-4">
                @(ViewBag.NameError == null ? 
                    "Software Version" : 
                    ViewBag.NameError)
            </label> 
            @*@Html.LabelFor(model => model.SoftwareVersion, htmlAttributes: new { @class = "control-label col-md-4" })*@
            <div class="col-md-6">
                <input class="form-control text-box single-line" id="SoftwareVersion" name="SoftwareVersion" type="text" value="" disabled/>
                @Html.ValidationMessageFor(model => model.SoftwareVersion, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group @(ViewBag.FileError != null?"has-error":"")">
            <label class="control-label col-md-4">
                @(ViewBag.FileError == null ? 
                    "BLOB URL: Must be tarfile and contain a script called 'apply.sh'." : 
                    ViewBag.FileError)
            </label>
            <div class="col-md-6">
                <input type="url" id="tarfile" name="blobUrl" class="form-control" />
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Changelog, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Changelog, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Changelog, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
        <script>
        $(document).ready(function () {
            $('#sw-prefix').on('input', changeInput)
            $('#sw-release').on('input', changeInput)
            $('#sw-suffix').on('input', changeInput)
            changeInput()
        });
        function changeInput() {
            var prefix = $('#sw-prefix').val()
            var release = $('#sw-release').prop('selectedIndex')
            var suffix = $('#sw-suffix').val()
            var s = prefix ? prefix + '-' : '';
            s += 'r0.0.' + release
            s += suffix ? '-' + suffix : '';
            $('#SoftwareVersion').val(s)
        }
    </script>
}
